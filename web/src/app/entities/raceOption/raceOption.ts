//
// Project home: https://github.com/jaxio/celerio-angular-quickstart
// 
// Source code generated by Celerio, an Open Source code generator by Jaxio.
// Documentation: http://www.jaxio.com/documentation/celerio/
// Source code: https://github.com/jaxio/celerio/
// Follow us on twitter: @jaxiosoft
// This header can be customized in Celerio conf...
// Template pack-angular:web/src/app/entities/entity.ts.e.vm
//
import {Gender} from '../gender/gender';
import {Model} from '../model/model';

export class RaceOption {
    // Raw attributes
    id : number;
    strengthmin : number;
    strengthmax : number;
    agilitymin : number;
    agilitymax : number;
    endurancemin : number;
    endurancemax : number;
    intelligencemin : number;
    intelligencemax : number;
    charismamin : number;
    charismamax : number;
    perceptionmin : number;
    perceptionmax : number;
    luckmin : number;
    luckmax : number;
    heightmin : number;
    heightmax : number;
    weightmin : number;
    weightmax : number;
    creationDate : Date;
    creationAuthor : string;
    lastModificationDate : Date;
    lastModificationAuthor : string;
    version : number;
    // many-to-many
    theGenders : Gender[];
    theModels : Model[];


    constructor(json? : any) {
        if (json != null) {
            this.id = json.id;
            this.strengthmin = json.strengthmin;
            this.strengthmax = json.strengthmax;
            this.agilitymin = json.agilitymin;
            this.agilitymax = json.agilitymax;
            this.endurancemin = json.endurancemin;
            this.endurancemax = json.endurancemax;
            this.intelligencemin = json.intelligencemin;
            this.intelligencemax = json.intelligencemax;
            this.charismamin = json.charismamin;
            this.charismamax = json.charismamax;
            this.perceptionmin = json.perceptionmin;
            this.perceptionmax = json.perceptionmax;
            this.luckmin = json.luckmin;
            this.luckmax = json.luckmax;
            this.heightmin = json.heightmin;
            this.heightmax = json.heightmax;
            this.weightmin = json.weightmin;
            this.weightmax = json.weightmax;
            if (json.creationDate != null) {
                this.creationDate = new Date(json.creationDate);
            }
            this.creationAuthor = json.creationAuthor;
            if (json.lastModificationDate != null) {
                this.lastModificationDate = new Date(json.lastModificationDate);
            }
            this.lastModificationAuthor = json.lastModificationAuthor;
            this.version = json.version;

            if (json.theGenders != null) {
                this.theGenders = Gender.toArray(json.theGenders);
            }

            if (json.theModels != null) {
                this.theModels = Model.toArray(json.theModels);
            }
        }
    }

    // Utils

    static toArray(jsons : any[]) : RaceOption[] {
        let raceOptions : RaceOption[] = [];
        if (jsons != null) {
            for (let json of jsons) {
                raceOptions.push(new RaceOption(json));
            }
        }
        return raceOptions;
    }
}
