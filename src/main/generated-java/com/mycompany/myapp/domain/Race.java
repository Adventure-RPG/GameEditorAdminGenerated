/*
 * Project home: https://github.com/jaxio/celerio-angular-quickstart
 * 
 * Source code generated by Celerio, an Open Source code generator by Jaxio.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Source code: https://github.com/jaxio/celerio/
 * Follow us on twitter: @jaxiosoft
 * This header can be customized in Celerio conf...
 * Template pack-angular:src/main/java/domain/Entity.java.e.vm
 */
package com.mycompany.myapp.domain;

import static javax.persistence.GenerationType.IDENTITY;

import java.io.Serializable;
import java.time.Instant;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Logger;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.Version;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.NotEmpty;

import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import com.mycompany.myapp.audit.AuditContextHolder;

@Entity
@Table(name = "race")
public class Race implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(Race.class.getName());

    // Raw attributes
    private Integer id;
    private String name;
    private String description;
    private String imgFile;
    private Instant creationDate;
    private String creationAuthor;
    private Instant lastModificationDate;
    private String lastModificationAuthor;
    private Integer version;

    // Many to one
    private RaceOption raceOpt;
    private Characteristic charc;

    // One to many
    private List<Character> characterRace = new ArrayList<Character>();

    @Override
    public String entityClassName() {
        return Race.class.getSimpleName();
    }

    // -- [id] ------------------------

    @Override
    @Column(name = "id", precision = 10)
    @GeneratedValue(strategy = IDENTITY)
    @Id
    public Integer getId() {
        return id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    public Race id(Integer id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    public boolean isIdSet() {
        return id != null;
    }
    // -- [name] ------------------------

    @NotEmpty
    @Size(max = 200)
    @Column(name = "name", nullable = false, length = 200)
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Race name(String name) {
        setName(name);
        return this;
    }
    // -- [description] ------------------------

    @Size(max = 2147483647)
    @Column(name = "description", length = 2147483647)
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Race description(String description) {
        setDescription(description);
        return this;
    }
    // -- [imgFile] ------------------------

    @NotEmpty
    @Size(max = 300)
    @Column(name = "img_file", nullable = false, length = 300)
    public String getImgFile() {
        return imgFile;
    }

    public void setImgFile(String imgFile) {
        this.imgFile = imgFile;
    }

    public Race imgFile(String imgFile) {
        setImgFile(imgFile);
        return this;
    }
    // -- [creationDate] ------------------------

    @Column(name = "creation_date", length = 29)
    public Instant getCreationDate() {
        return creationDate;
    }

    public void setCreationDate(Instant creationDate) {
        this.creationDate = creationDate;
    }

    public Race creationDate(Instant creationDate) {
        setCreationDate(creationDate);
        return this;
    }
    // -- [creationAuthor] ------------------------

    @Column(name = "creation_author", length = 200)
    public String getCreationAuthor() {
        return creationAuthor;
    }

    public void setCreationAuthor(String creationAuthor) {
        this.creationAuthor = creationAuthor;
    }

    public Race creationAuthor(String creationAuthor) {
        setCreationAuthor(creationAuthor);
        return this;
    }
    // -- [lastModificationDate] ------------------------

    @Column(name = "last_modification_date", length = 29)
    public Instant getLastModificationDate() {
        return lastModificationDate;
    }

    public void setLastModificationDate(Instant lastModificationDate) {
        this.lastModificationDate = lastModificationDate;
    }

    public Race lastModificationDate(Instant lastModificationDate) {
        setLastModificationDate(lastModificationDate);
        return this;
    }
    // -- [lastModificationAuthor] ------------------------

    @Column(name = "last_modification_author", length = 200)
    public String getLastModificationAuthor() {
        return lastModificationAuthor;
    }

    public void setLastModificationAuthor(String lastModificationAuthor) {
        this.lastModificationAuthor = lastModificationAuthor;
    }

    public Race lastModificationAuthor(String lastModificationAuthor) {
        setLastModificationAuthor(lastModificationAuthor);
        return this;
    }
    // -- [version] ------------------------

    @Column(name = "version", precision = 10)
    @Version
    public Integer getVersion() {
        return version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    public Race version(Integer version) {
        setVersion(version);
        return this;
    }

    // -----------------------------------------------------------------
    // Many to One support
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Race.raceOpt ==> RaceOption.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @NotNull
    @JoinColumn(name = "race_opt_id", nullable = false)
    @ManyToOne
    public RaceOption getRaceOpt() {
        return raceOpt;
    }

    /**
     * Set the {@link #raceOpt} without adding this Race instance on the passed {@link #raceOpt}
     */
    public void setRaceOpt(RaceOption raceOpt) {
        this.raceOpt = raceOpt;
    }

    public Race raceOpt(RaceOption raceOpt) {
        setRaceOpt(raceOpt);
        return this;
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Race.charc ==> Characteristic.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @NotNull
    @JoinColumn(name = "charc_id", nullable = false)
    @ManyToOne
    public Characteristic getCharc() {
        return charc;
    }

    /**
     * Set the {@link #charc} without adding this Race instance on the passed {@link #charc}
     */
    public void setCharc(Characteristic charc) {
        this.charc = charc;
    }

    public Race charc(Characteristic charc) {
        setCharc(charc);
        return this;
    }

    // -----------------------------------------------------------------
    // One to Many support
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // one to many: race ==> characterRace
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @OneToMany(mappedBy = "race")
    public List<Character> getCharacterRace() {
        return characterRace;
    }

    /**
     * Set the {@link Character} list.
     * It is recommended to use the helper method {@link #addCharacter(Character)} / {@link #removeCharacter(Character)}
     * if you want to preserve referential integrity at the object level.
     *
     * @param characterRace the list to set
     */
    public void setCharacterRace(List<Character> characterRace) {
        this.characterRace = characterRace;
    }

    /**
     * Helper method to add the passed {@link Character} to the {@link #characterRace} list
     * and set this race on the passed character to preserve referential
     * integrity at the object level.
     *
     * @param character the to add
     * @return true if the character could be added to the characterRace list, false otherwise
     */
    public boolean addCharacter(Character character) {
        if (getCharacterRace().add(character)) {
            character.setRace(this);
            return true;
        }
        return false;
    }

    /**
     * Helper method to remove the passed {@link Character} from the {@link #characterRace} list and unset
     * this race from the passed character to preserve referential integrity at the object level.
     *
     * @param character the instance to remove
     * @return true if the character could be removed from the characterRace list, false otherwise
     */
    public boolean removeCharacter(Character character) {
        if (getCharacterRace().remove(character)) {
            character.setRace(null);
            return true;
        }
        return false;
    }

    /**
     * Apply the default values.
     */
    public Race withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Race && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this Race instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this) //
                .add("id", getId()) //
                .add("name", getName()) //
                .add("description", getDescription()) //
                .add("imgFile", getImgFile()) //
                .add("creationDate", getCreationDate()) //
                .add("creationAuthor", getCreationAuthor()) //
                .add("lastModificationDate", getLastModificationDate()) //
                .add("lastModificationAuthor", getLastModificationAuthor()) //
                .add("version", getVersion()) //
                .toString();
    }

    @PrePersist
    protected void prePersist() {
        if (AuditContextHolder.audit()) {
            setCreationAuthor(AuditContextHolder.username());
            setCreationDate(Instant.now());

        }
    }

    @PreUpdate
    protected void preUpdate() {
        if (AuditContextHolder.audit()) {
            setLastModificationAuthor(AuditContextHolder.username());
            setLastModificationDate(Instant.now());
        }
    }
}