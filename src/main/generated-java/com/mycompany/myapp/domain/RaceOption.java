/*
 * Project home: https://github.com/jaxio/celerio-angular-quickstart
 * 
 * Source code generated by Celerio, an Open Source code generator by Jaxio.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Source code: https://github.com/jaxio/celerio/
 * Follow us on twitter: @jaxiosoft
 * This header can be customized in Celerio conf...
 * Template pack-angular:src/main/java/domain/Entity.java.e.vm
 */
package com.mycompany.myapp.domain;

import static javax.persistence.GenerationType.IDENTITY;

import java.io.Serializable;
import java.time.Instant;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Logger;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.Version;
import javax.validation.constraints.Digits;
import javax.validation.constraints.NotNull;

import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import com.mycompany.myapp.audit.AuditContextHolder;

@Entity
@Table(name = "race_option")
public class RaceOption implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(RaceOption.class.getName());

    // Raw attributes
    private Integer id;
    private Integer strengthmin;
    private Integer strengthmax;
    private Integer agilitymin;
    private Integer agilitymax;
    private Integer endurancemin;
    private Integer endurancemax;
    private Integer intelligencemin;
    private Integer intelligencemax;
    private Integer charismamin;
    private Integer charismamax;
    private Integer perceptionmin;
    private Integer perceptionmax;
    private Integer luckmin;
    private Integer luckmax;
    private Integer heightmin;
    private Integer heightmax;
    private Integer weightmin;
    private Integer weightmax;
    private Instant creationDate;
    private String creationAuthor;
    private Instant lastModificationDate;
    private String lastModificationAuthor;
    private Integer version;

    // Many to many
    private List<Gender> theGenders = new ArrayList<Gender>();
    private List<Model> theModels = new ArrayList<Model>();

    @Override
    public String entityClassName() {
        return RaceOption.class.getSimpleName();
    }

    // -- [id] ------------------------

    @Override
    @Column(name = "id", precision = 10)
    @GeneratedValue(strategy = IDENTITY)
    @Id
    public Integer getId() {
        return id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    public RaceOption id(Integer id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    public boolean isIdSet() {
        return id != null;
    }
    // -- [strengthmin] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "strengthmin", nullable = false, precision = 10)
    public Integer getStrengthmin() {
        return strengthmin;
    }

    public void setStrengthmin(Integer strengthmin) {
        this.strengthmin = strengthmin;
    }

    public RaceOption strengthmin(Integer strengthmin) {
        setStrengthmin(strengthmin);
        return this;
    }
    // -- [strengthmax] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "strengthmax", nullable = false, precision = 10)
    public Integer getStrengthmax() {
        return strengthmax;
    }

    public void setStrengthmax(Integer strengthmax) {
        this.strengthmax = strengthmax;
    }

    public RaceOption strengthmax(Integer strengthmax) {
        setStrengthmax(strengthmax);
        return this;
    }
    // -- [agilitymin] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "agilitymin", nullable = false, precision = 10)
    public Integer getAgilitymin() {
        return agilitymin;
    }

    public void setAgilitymin(Integer agilitymin) {
        this.agilitymin = agilitymin;
    }

    public RaceOption agilitymin(Integer agilitymin) {
        setAgilitymin(agilitymin);
        return this;
    }
    // -- [agilitymax] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "agilitymax", nullable = false, precision = 10)
    public Integer getAgilitymax() {
        return agilitymax;
    }

    public void setAgilitymax(Integer agilitymax) {
        this.agilitymax = agilitymax;
    }

    public RaceOption agilitymax(Integer agilitymax) {
        setAgilitymax(agilitymax);
        return this;
    }
    // -- [endurancemin] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "endurancemin", nullable = false, precision = 10)
    public Integer getEndurancemin() {
        return endurancemin;
    }

    public void setEndurancemin(Integer endurancemin) {
        this.endurancemin = endurancemin;
    }

    public RaceOption endurancemin(Integer endurancemin) {
        setEndurancemin(endurancemin);
        return this;
    }
    // -- [endurancemax] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "endurancemax", nullable = false, precision = 10)
    public Integer getEndurancemax() {
        return endurancemax;
    }

    public void setEndurancemax(Integer endurancemax) {
        this.endurancemax = endurancemax;
    }

    public RaceOption endurancemax(Integer endurancemax) {
        setEndurancemax(endurancemax);
        return this;
    }
    // -- [intelligencemin] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "intelligencemin", nullable = false, precision = 10)
    public Integer getIntelligencemin() {
        return intelligencemin;
    }

    public void setIntelligencemin(Integer intelligencemin) {
        this.intelligencemin = intelligencemin;
    }

    public RaceOption intelligencemin(Integer intelligencemin) {
        setIntelligencemin(intelligencemin);
        return this;
    }
    // -- [intelligencemax] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "intelligencemax", nullable = false, precision = 10)
    public Integer getIntelligencemax() {
        return intelligencemax;
    }

    public void setIntelligencemax(Integer intelligencemax) {
        this.intelligencemax = intelligencemax;
    }

    public RaceOption intelligencemax(Integer intelligencemax) {
        setIntelligencemax(intelligencemax);
        return this;
    }
    // -- [charismamin] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "charismamin", nullable = false, precision = 10)
    public Integer getCharismamin() {
        return charismamin;
    }

    public void setCharismamin(Integer charismamin) {
        this.charismamin = charismamin;
    }

    public RaceOption charismamin(Integer charismamin) {
        setCharismamin(charismamin);
        return this;
    }
    // -- [charismamax] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "charismamax", nullable = false, precision = 10)
    public Integer getCharismamax() {
        return charismamax;
    }

    public void setCharismamax(Integer charismamax) {
        this.charismamax = charismamax;
    }

    public RaceOption charismamax(Integer charismamax) {
        setCharismamax(charismamax);
        return this;
    }
    // -- [perceptionmin] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "perceptionmin", nullable = false, precision = 10)
    public Integer getPerceptionmin() {
        return perceptionmin;
    }

    public void setPerceptionmin(Integer perceptionmin) {
        this.perceptionmin = perceptionmin;
    }

    public RaceOption perceptionmin(Integer perceptionmin) {
        setPerceptionmin(perceptionmin);
        return this;
    }
    // -- [perceptionmax] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "perceptionmax", nullable = false, precision = 10)
    public Integer getPerceptionmax() {
        return perceptionmax;
    }

    public void setPerceptionmax(Integer perceptionmax) {
        this.perceptionmax = perceptionmax;
    }

    public RaceOption perceptionmax(Integer perceptionmax) {
        setPerceptionmax(perceptionmax);
        return this;
    }
    // -- [luckmin] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "luckmin", nullable = false, precision = 10)
    public Integer getLuckmin() {
        return luckmin;
    }

    public void setLuckmin(Integer luckmin) {
        this.luckmin = luckmin;
    }

    public RaceOption luckmin(Integer luckmin) {
        setLuckmin(luckmin);
        return this;
    }
    // -- [luckmax] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "luckmax", nullable = false, precision = 10)
    public Integer getLuckmax() {
        return luckmax;
    }

    public void setLuckmax(Integer luckmax) {
        this.luckmax = luckmax;
    }

    public RaceOption luckmax(Integer luckmax) {
        setLuckmax(luckmax);
        return this;
    }
    // -- [heightmin] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "heightmin", nullable = false, precision = 10)
    public Integer getHeightmin() {
        return heightmin;
    }

    public void setHeightmin(Integer heightmin) {
        this.heightmin = heightmin;
    }

    public RaceOption heightmin(Integer heightmin) {
        setHeightmin(heightmin);
        return this;
    }
    // -- [heightmax] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "heightmax", nullable = false, precision = 10)
    public Integer getHeightmax() {
        return heightmax;
    }

    public void setHeightmax(Integer heightmax) {
        this.heightmax = heightmax;
    }

    public RaceOption heightmax(Integer heightmax) {
        setHeightmax(heightmax);
        return this;
    }
    // -- [weightmin] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "weightmin", nullable = false, precision = 10)
    public Integer getWeightmin() {
        return weightmin;
    }

    public void setWeightmin(Integer weightmin) {
        this.weightmin = weightmin;
    }

    public RaceOption weightmin(Integer weightmin) {
        setWeightmin(weightmin);
        return this;
    }
    // -- [weightmax] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "weightmax", nullable = false, precision = 10)
    public Integer getWeightmax() {
        return weightmax;
    }

    public void setWeightmax(Integer weightmax) {
        this.weightmax = weightmax;
    }

    public RaceOption weightmax(Integer weightmax) {
        setWeightmax(weightmax);
        return this;
    }
    // -- [creationDate] ------------------------

    @Column(name = "creation_date", length = 29)
    public Instant getCreationDate() {
        return creationDate;
    }

    public void setCreationDate(Instant creationDate) {
        this.creationDate = creationDate;
    }

    public RaceOption creationDate(Instant creationDate) {
        setCreationDate(creationDate);
        return this;
    }
    // -- [creationAuthor] ------------------------

    @Column(name = "creation_author", length = 200)
    public String getCreationAuthor() {
        return creationAuthor;
    }

    public void setCreationAuthor(String creationAuthor) {
        this.creationAuthor = creationAuthor;
    }

    public RaceOption creationAuthor(String creationAuthor) {
        setCreationAuthor(creationAuthor);
        return this;
    }
    // -- [lastModificationDate] ------------------------

    @Column(name = "last_modification_date", length = 29)
    public Instant getLastModificationDate() {
        return lastModificationDate;
    }

    public void setLastModificationDate(Instant lastModificationDate) {
        this.lastModificationDate = lastModificationDate;
    }

    public RaceOption lastModificationDate(Instant lastModificationDate) {
        setLastModificationDate(lastModificationDate);
        return this;
    }
    // -- [lastModificationAuthor] ------------------------

    @Column(name = "last_modification_author", length = 200)
    public String getLastModificationAuthor() {
        return lastModificationAuthor;
    }

    public void setLastModificationAuthor(String lastModificationAuthor) {
        this.lastModificationAuthor = lastModificationAuthor;
    }

    public RaceOption lastModificationAuthor(String lastModificationAuthor) {
        setLastModificationAuthor(lastModificationAuthor);
        return this;
    }
    // -- [version] ------------------------

    @Column(name = "version", precision = 10)
    @Version
    public Integer getVersion() {
        return version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    public RaceOption version(Integer version) {
        setVersion(version);
        return this;
    }

    // -----------------------------------------------------------------
    // Many to Many
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
    // many-to-many: raceOption ==> theGenders
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

    /**
     * Returns the {@link #theGenders} list.
     */
    @JoinTable(name = "race_option_gender", joinColumns = @JoinColumn(name = "race_opt_id") , inverseJoinColumns = @JoinColumn(name = "gender_id") )
    @ManyToMany
    public List<Gender> getTheGenders() {
        return theGenders;
    }

    /**
     * Set the {@link #theGenders} list.
     *
     * @param theGenders the list of Gender
     */
    public void setTheGenders(List<Gender> theGenders) {
        this.theGenders = theGenders;
    }

    /**
     * Helper method to add the passed {@link Gender} to the {@link #theGenders} list.
     */
    public boolean addAnGender(Gender anGender) {
        return getTheGenders().add(anGender);
    }

    /**
     * Helper method to remove the passed {@link Gender} from the {@link #theGenders} list.
     */
    public boolean removeAnGender(Gender anGender) {
        return getTheGenders().remove(anGender);
    }

    /**
     * Helper method to determine if the passed {@link Gender} is present in the {@link #theGenders} list.
     */
    public boolean containsAnGender(Gender anGender) {
        return getTheGenders() != null && getTheGenders().contains(anGender);
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
    // many-to-many: raceOption ==> theModels
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

    /**
     * Returns the {@link #theModels} list.
     */
    @JoinTable(name = "gender_model", joinColumns = @JoinColumn(name = "gender_id") , inverseJoinColumns = @JoinColumn(name = "model_id") )
    @ManyToMany
    public List<Model> getTheModels() {
        return theModels;
    }

    /**
     * Set the {@link #theModels} list.
     *
     * @param theModels the list of Model
     */
    public void setTheModels(List<Model> theModels) {
        this.theModels = theModels;
    }

    /**
     * Helper method to add the passed {@link Model} to the {@link #theModels} list.
     */
    public boolean addAnModel(Model anModel) {
        return getTheModels().add(anModel);
    }

    /**
     * Helper method to remove the passed {@link Model} from the {@link #theModels} list.
     */
    public boolean removeAnModel(Model anModel) {
        return getTheModels().remove(anModel);
    }

    /**
     * Helper method to determine if the passed {@link Model} is present in the {@link #theModels} list.
     */
    public boolean containsAnModel(Model anModel) {
        return getTheModels() != null && getTheModels().contains(anModel);
    }

    /**
     * Apply the default values.
     */
    public RaceOption withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof RaceOption && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this RaceOption instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this) //
                .add("id", getId()) //
                .add("strengthmin", getStrengthmin()) //
                .add("strengthmax", getStrengthmax()) //
                .add("agilitymin", getAgilitymin()) //
                .add("agilitymax", getAgilitymax()) //
                .add("endurancemin", getEndurancemin()) //
                .add("endurancemax", getEndurancemax()) //
                .add("intelligencemin", getIntelligencemin()) //
                .add("intelligencemax", getIntelligencemax()) //
                .add("charismamin", getCharismamin()) //
                .add("charismamax", getCharismamax()) //
                .add("perceptionmin", getPerceptionmin()) //
                .add("perceptionmax", getPerceptionmax()) //
                .add("luckmin", getLuckmin()) //
                .add("luckmax", getLuckmax()) //
                .add("heightmin", getHeightmin()) //
                .add("heightmax", getHeightmax()) //
                .add("weightmin", getWeightmin()) //
                .add("weightmax", getWeightmax()) //
                .add("creationDate", getCreationDate()) //
                .add("creationAuthor", getCreationAuthor()) //
                .add("lastModificationDate", getLastModificationDate()) //
                .add("lastModificationAuthor", getLastModificationAuthor()) //
                .add("version", getVersion()) //
                .toString();
    }

    @PrePersist
    protected void prePersist() {
        if (AuditContextHolder.audit()) {
            setCreationAuthor(AuditContextHolder.username());
            setCreationDate(Instant.now());

        }
    }

    @PreUpdate
    protected void preUpdate() {
        if (AuditContextHolder.audit()) {
            setLastModificationAuthor(AuditContextHolder.username());
            setLastModificationDate(Instant.now());
        }
    }
}